#!/usr/bin/env python3
"""
Script pour compl√®tement r√©initialiser le fichier de donn√©es
"""

import json
import os
import logging
from datetime import datetime

# Configuration du logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def reset_data_file():
    """R√©initialise compl√®tement le fichier de donn√©es"""
    data_file = "app/data/network_data.json"
    
    # Cr√©er un fichier de donn√©es compl√®tement propre
    clean_data = {
        "connections": [],
        "alerts": [],
        "stats": {
            "total_connections": 0,
            "total_alerts": 0,
            "active_threats": 0,
            "last_update": datetime.now().isoformat()
        }
    }
    
    try:
        # Sauvegarder le nouveau fichier
        with open(data_file, 'w') as f:
            json.dump(clean_data, f, indent=2)
        
        logger.info("üßπ Fichier de donn√©es compl√®tement r√©initialis√©!")
        logger.info("‚úÖ Toutes les anciennes donn√©es supprim√©es")
        logger.info("‚ú® Syst√®me pr√™t pour de nouvelles d√©tections")
        
    except Exception as e:
        logger.error(f"Erreur lors de la r√©initialisation: {e}")

def main():
    """Fonction principale"""
    logger.info("üîÑ R√©initialisation compl√®te du syst√®me IDS...")
    logger.info("=" * 50)
    
    # R√©initialiser le fichier de donn√©es
    reset_data_file()
    
    logger.info("=" * 50)
    logger.info("‚úÖ R√©initialisation termin√©e!")
    logger.info("üöÄ Vous pouvez maintenant red√©marrer le syst√®me:")
    logger.info("   python run_windows.py")
    logger.info("=" * 50)

if __name__ == "__main__":
    main() 